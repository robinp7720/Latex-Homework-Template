# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps: 
        # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
        if: github.event_name == 'pull_request'
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0
          
      - uses: actions/checkout@v3
        if: github.event_name == 'push'
        with:
          fetch-depth: 0
          
      - name: Get latest edited homework
        run: |
          git -C ${GITHUB_WORKSPACE} diff-tree HEAD
          git -C ${GITHUB_WORKSPACE} status
          latest=$(${GITHUB_WORKSPACE}/.tools/latest_abgabe.sh)
          echo "latest=$latest" >> $GITHUB_ENV
          echo "Last modified assignment: $latest"

      # Runs a single command using the runners shell
      - uses: xu-cheng/texlive-action/full@v1
        name: Build latest latex project for submission
        with:
          run: |
            ${GITHUB_WORKSPACE}/.tools/make.sh ${{ env.latest  }}

      - name: Find generated PDF
        run: |
          artifactPath=$(find ${GITHUB_WORKSPACE} -name "*.pdf" -type f -exec stat {} -c "%y %n" \; | sort -nr | head -n 1 | cut -d ' ' -f4-)
          echo "artifactPath=$artifactPath" >> $GITHUB_ENV

      - uses: actions/upload-artifact@v3
        name: Upload PDF as workflow artifact
        with:
          name: Submissions
          path: ${{ env.artifactPath }}
      
      - uses: "marvinpinto/action-automatic-releases@latest"
        name: Create new release
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest-${{ env.latest }}"
          prerelease: true
          title: "Blatt ${{ env.latest  }}"
          files: |
            ${{ env.artifactPath }}
